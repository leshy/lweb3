// Generated by LiveScript 1.4.0
(function(){
  var dgram, ref$, v, ValidatedModel, core, udpServer;
  dgram = require('dgram');
  ref$ = require('validator2-extras'), v = ref$.v, ValidatedModel = ref$.ValidatedModel;
  core = require('../../core');
  udpServer = exports.udpServer = core.channel.extend4000(ValidatedModel, {
    validator: {
      port: Number,
      address: v().Default('0.0.0.0').String()
    },
    defaults: {
      name: 'UDPs'
    },
    initialize: function(){
      var e, this$ = this;
      this.server = dgram.createSocket("udp4");
      this.server.on('error', function(err){
        this$.server.close();
        return this$.end();
      });
      this.server.on("message", function(msg, rinfo){
        var e;
        try {
          msg = JSON.parse(msg);
          return this$.event(msg);
        } catch (e$) {
          e = e$;
          return console.log(e);
        }
      });
      this.server.on("listening", function(){
        var address;
        return address = this$.server.address();
      });
      try {
        return this.server.bind({
          port: this.get('port'),
          address: this.get('address')
        });
      } catch (e$) {
        e = e$;
        console.log(e);
        return this.end();
      }
    },
    end: function(){
      this.server.close();
      return core.core.prototype.end.call(this);
    }
  });
}).call(this);
