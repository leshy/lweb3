// Generated by CoffeeScript 1.7.1
(function() {
  var Backbone, channel, core, helpers, queryBydirectional, queryClient, queryServer, server, subscriptionMan, v, validator, _;

  _ = require('underscore');

  Backbone = require('backbone4000');

  helpers = require('helpers');

  subscriptionMan = require('subscriptionman2');

  validator = require('validator2-extras');

  v = validator.v;

  core = exports.core = Backbone.Model.extend4000({
    initialize: function() {
      var parent;
      if (parent = this.get('parent')) {
        this.parent = parent;
      }
      return this.verbose = this.get('verbose') || (typeof this.parent === "function" ? this.parent(verbose || false) : void 0);
    }
  });

  channel = exports.channel = core.extend4000({
    send: function(msg) {
      return true;
    },
    receive: function(callback) {
      return true;
    }
  });

  queryClient = exports.queryClient = core.extend4000({
    query: function(msg, callback) {
      return true;
    }
  });

  queryServer = exports.queryServer = core.extend4000({
    subscribe: function(pattern, callback) {
      return true;
    }
  });

  queryBydirectional = exports.queryBydirectional = core.extend4000(queryClient, queryServer);

  server = exports.server = core.extend4000(subscriptionMan.basic, {});

}).call(this);
